<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gojek on Vedang Manerikar</title><link>https://vedang.me/tags/gojek/</link><description>Recent content in gojek on Vedang Manerikar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 20 Jul 2019 07:39:00 +0530</lastBuildDate><atom:link href="https://vedang.me/tags/gojek/index.xml" rel="self" type="application/rss+xml"/><item><title>Lazy Weekend Viewing: GOJEK's 10x Engineer - Truth or Myth?</title><link>https://vedang.me/notes/gojek-10x-engineering/</link><pubDate>Sat, 20 Jul 2019 07:39:00 +0530</pubDate><guid>https://vedang.me/notes/gojek-10x-engineering/</guid><description>&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Engineering quality is paramount. Focus on &lt;a href="https://dave.cheney.net/2019/07/09/clear-is-better-than-clever">clean and clear code&lt;/a>.
Code is the primary medium of communication for any engineer.
Write beautiful code and hold people to high standards.&lt;/li>
&lt;li>Adding head count has vast hidden costs and often brings down
output. The reason for this is the exponential increase in
communication required to align everyone to common goals.&lt;/li>
&lt;li>Similarly, pods cannot scale unless they can own small,
independent components.&lt;/li>
&lt;li>Monoliths are normal and good when the company is small.
Refactoring the monolithic model into different components allows
us to scale pods and org.&lt;/li>
&lt;li>Carve monoliths only when it hits critical mass. Then, identify
the pain and pull it out into it&amp;rsquo;s own pod.&lt;/li>
&lt;li>&amp;ldquo;Relationship as a service&amp;rdquo; or &amp;ldquo;Please get this done for me over
and above other stuff on your plate&amp;rdquo;
&lt;ul>
&lt;li>&amp;ldquo;Traffic congestion&amp;rdquo; (A team which is too busy) and structural
failure can lead to the impression that the system is
bureaucratic and political.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Criteria when hiring Engineers
&lt;ul>
&lt;li>Computer science (Can computers understand your code?)
&lt;ul>
&lt;li>Ability to grasp large complex systems&lt;/li>
&lt;li>Understanding of implications of design choices on that system.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Software Engineering (Can humans understand your code?)
&lt;ul>
&lt;li>How well do you communicate through your code? This is the
metric that enables building &lt;strong>good&lt;/strong> systems.&lt;/li>
&lt;li>The hygiene you show in code is the hygiene you will enforce
on others.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Good behavioral traits (Can you grow?)
&lt;ul>
&lt;li>Curious&lt;/li>
&lt;li>Wants to learn&lt;/li>
&lt;li>Can accept feedback&lt;/li>
&lt;li>&amp;ldquo;Strong opinions, Weakly held.&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;Pride without attachment.&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Find the full video &lt;a href="https://www.youtube.com/watch?v=He0XBBfCEVk">here&lt;/a>!&lt;/li>
&lt;li>The rest of this post is detailed notes on the video&lt;/li>
&lt;/ul></description></item></channel></rss>