<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>clojure on Vedang Manerikar</title>
    <link>https://vedang.me/tags/clojure/</link>
    <description>Recent content in clojure on Vedang Manerikar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 00:00:00 +0530</lastBuildDate>
    
	<atom:link href="https://vedang.me/tags/clojure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simulating the Passport Seva Kendra using Clojure</title>
      <link>https://vedang.me/techlog/2018-12-15-simulating-the-passport-seva-kendra/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0530</pubDate>
      
      <guid>https://vedang.me/techlog/2018-12-15-simulating-the-passport-seva-kendra/</guid>
      <description>&lt;p&gt;&lt;em&gt;Cross-posted from my post on the &lt;a href=&#34;https://medium.com/helpshift-engineering/simulating-the-passport-seva-kendra-using-clojure-fd88c12dde8c&#34;&gt;Helpshift Engineering Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A year ago, I went to the Passport Seva Kendra (PSK) in Mundhwa, Pune
to get my passport renewed. At the time, the government had revamped
this process and made it a simple, step-in/step-out painless affair.
Unfortunately for me, I hit an edge-case in the system and took much
longer than expected to complete. I was there for close to 4 hours. I
used this time to observe the behavior of the PSK and think about
ways to improve the applicant experience. I thought it was an
interesting problem to solve and write about.&lt;/p&gt;

&lt;p&gt;Recently, my wife booked an appointment at the PSK to renew &lt;span class=&#34;underline&#34;&gt;her&lt;/span&gt;
passport and this provided the spark I needed to write about it. So
here we are, a year later, talking about the passport renewal process
at the PSK.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Composability and Compojure</title>
      <link>https://vedang.me/techlog/2012-02-23-composability-and-compojure/</link>
      <pubDate>Thu, 23 Feb 2012 23:57:57 +0530</pubDate>
      
      <guid>https://vedang.me/techlog/2012-02-23-composability-and-compojure/</guid>
      <description>&lt;p&gt;&lt;em&gt;Caveat&lt;/em&gt;: This post needs some rudimentary knowledge of Compojure.
Compojure is a web framework for Clojure, and if you don&amp;rsquo;t understand
what that means, then you should probably head over to the
&lt;a href=&#34;https://github.com/weavejester/compojure/wiki&#34;&gt;Compojure docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Compojure exposes us to a beautifully &lt;em&gt;composable&lt;/em&gt; abstraction, and
this post is an attempt to show why that is a great thing.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>