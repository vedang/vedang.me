<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>distributed-systems on Vedang Manerikar</title><link>https://vedang.me/tags/distributed-systems/</link><description>Recent content in distributed-systems on Vedang Manerikar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Aug 2020 18:11:52 +0530</lastBuildDate><atom:link href="https://vedang.me/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml"/><item><title>L Peter Deutsch: The Fallacies of Distributed Computing</title><link>https://vedang.me/notes/l-peter-deutsch-the-fallacies-of-distributed-computing/</link><pubDate>Sat, 22 Aug 2020 18:11:52 +0530</pubDate><guid>https://vedang.me/notes/l-peter-deutsch-the-fallacies-of-distributed-computing/</guid><description>Snippet from: The Wikipedia Article, along with my own notes
The network is reliable Think about error-handling on network failures. Use the following patterns: Timeouts, Retries, Circuit breakers, Graceful Degradation. Latency is zero Think about bandwidth requirements and packet loss. Use the following patterns: Small payloads, Compression, Asynchronous Communication, Perceived Progress, Timeouts, Graceful Degradation. Bandwidth is infinite The same as above. Think explicitly about bottlenecks in Network traffic. Use the following patterns: Caching, Etags.</description></item></channel></rss>