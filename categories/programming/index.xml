<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Vedang Manerikar</title><link>https://vedang.me/categories/programming/</link><description>Recent content in programming on Vedang Manerikar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Aug 2020 17:15:00 +0530</lastBuildDate><atom:link href="https://vedang.me/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>The Programmer's Guide to Wisdom</title><link>https://vedang.me/tinylog/programmer-guide/</link><pubDate>Sat, 22 Aug 2020 17:15:00 +0530</pubDate><guid>https://vedang.me/tinylog/programmer-guide/</guid><description>This poster captures timeless advice on programming, I keep a copy on my desk to read whenever I can.
Over the weekend, I created a poster for my desk. It captures timeless best practices and advice on programming and software design. Presenting it here, in the hopes that it&amp;#39;ll be useful to others as well. Features: @esrtweet, Doug McIlroy, @rob_pike and @RealGeneKim pic.twitter.com/Lj2kUqwq2J
&amp;mdash; Vedang Manerikar (@vedang) August 10, 2020 I collect such deeply useful and universal advice under the tag wisdom, if you want to read more posts of this kind.</description></item><item><title>Simulating the Passport Seva Kendra using Clojure</title><link>https://vedang.me/blog/simulating-the-passport-seva-kendra/</link><pubDate>Sat, 15 Dec 2018 19:56:00 +0530</pubDate><guid>https://vedang.me/blog/simulating-the-passport-seva-kendra/</guid><description>&lt;p>&lt;em>Cross-posted from my post on the &lt;a href="https://medium.com/helpshift-engineering/simulating-the-passport-seva-kendra-using-clojure-fd88c12dde8c">Helpshift Engineering Blog&lt;/a>&lt;/em>&lt;/p>
&lt;p>A year ago, I went to the Passport Seva Kendra (PSK) in Mundhwa, Pune
to get my passport renewed. At the time, the government had revamped
this process and made it a simple, step-in/step-out painless affair.
Unfortunately for me, I hit an edge-case in the system and took much
longer than expected to complete. I was there for close to 4 hours. I
used this time to observe the behavior of the PSK and think about
ways to improve the applicant experience. I thought it was an
interesting problem to solve and write about.&lt;/p>
&lt;p>Recently, my wife booked an appointment at the PSK to renew &lt;span class="underline">her&lt;/span>
passport and this provided the spark I needed to write about it. So
here we are, a year later, talking about the passport renewal process
at the PSK.&lt;/p></description></item><item><title>Composability and Compojure</title><link>https://vedang.me/blog/composability-and-compojure/</link><pubDate>Thu, 23 Feb 2012 23:58:00 +0530</pubDate><guid>https://vedang.me/blog/composability-and-compojure/</guid><description>&lt;p>&lt;em>Caveat&lt;/em>: This post needs some rudimentary knowledge of Compojure.
Compojure is a web framework for Clojure, and if you don&amp;rsquo;t understand
what that means, then you should probably head over to the
&lt;a href="https://github.com/weavejester/compojure/wiki">Compojure docs&lt;/a>.&lt;/p>
&lt;p>Compojure exposes us to a beautifully &lt;span class="underline">composable&lt;/span> abstraction, and
this post is an attempt to show why that is a great thing.&lt;/p></description></item><item><title>Switch Statements in Python</title><link>https://vedang.me/blog/switch-statements-in-python/</link><pubDate>Sun, 07 Aug 2011 13:21:00 +0530</pubDate><guid>https://vedang.me/blog/switch-statements-in-python/</guid><description>&lt;p>Today I went through some old Python code and noticed this pattern
through out:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">response, data &lt;span style="color:#f92672">=&lt;/span> somefunc()
&lt;span style="color:#66d9ef">if&lt;/span> response &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;this&amp;#34;&lt;/span>:
do_this_with(data)
&lt;span style="color:#66d9ef">elif&lt;/span> response &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;that&amp;#34;&lt;/span>:
do_that_with(data)
&lt;span style="color:#66d9ef">elif&lt;/span> response &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;huh&amp;#34;&lt;/span>:
duh(data)
;; lots more elifs&lt;span style="color:#f92672">.&lt;/span>
&lt;span style="color:#66d9ef">else&lt;/span>:
prevent_horrible_crash(data)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code should ideally have been a switch-case, but Python does not
support a &lt;code>switch&lt;/code> statement.&lt;/p></description></item></channel></rss>